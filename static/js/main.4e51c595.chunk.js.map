{"version":3,"sources":["artist/artist-search-result.tsx","search/search-results.tsx","search/search-service.ts","search/search-landing.tsx","hooks/useDebounce.ts","artist/artist-tracks.tsx","artist/artist-service.ts","artist/artist-info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ArtistSearchResult","props","artistImage","history","useHistory","artist","image","src","alt","name","Grid","container","spacing","item","xs","Typography","variant","className","onClick","event","push","pathname","state","SearchResults","searchHeader","artists","length","searchClickedOnce","map","index","searchArtist","searchTerm","page","axios","get","lastfm","then","response","data","results","artistmatches","console","log","getLastFmImage","imageLarge","mapToArtist","totalResults","parseInt","itemsPerPage","startIndex","size","SearchLanding","useState","setSearchTerm","total","currentPage","pagination","setPagination","setResults","setSearchClickedOnce","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","search","result","component","FormGroup","TextField","id","label","onChange","target","TablePagination","count","onChangePage","rowsPerPage","rowsPerPageOptions","ArtistTracks","artistTracks","setArtistTracks","artistId","mbid","error","toptracks","track","tracks","playcount","ArtistInfo","tourBadge","useLocation","artistDetails","setArtistDetails","bio","ontour","Chip","color","Accordion","AccordionSummary","expandIcon","AccordionDetails","parse","content","App","Container","maxWidth","path","Breadcrumbs","aria-label","href","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e51c595.chunk.js","sourcesContent":["import { Grid, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { Artist } from '../models/artist';\r\n\r\nexport interface ArtistSearchResultProps {\r\n  artist: Artist;\r\n}\r\n\r\nfunction ArtistSearchResult(props: ArtistSearchResultProps) {\r\n  const history = useHistory();\r\n\r\n  const handleClick = (event: any): void => {\r\n    history.push({\r\n      pathname: '/Artist',\r\n      state: { artist: props.artist },\r\n    });\r\n  };\r\n\r\n  let artistImage;\r\n  if (props.artist.image) {\r\n    artistImage = <img src={props.artist.image} alt={`${props.artist.name}`} />;\r\n  } else {\r\n    artistImage = <div>[No Image]</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={1}>\r\n          {artistImage}\r\n        </Grid>\r\n        <Grid item xs={11}>\r\n          <Typography variant=\"h6\" className=\"artist-result\" onClick={handleClick}>\r\n            {props.artist.name}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtistSearchResult;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ArtistSearchResult from '../artist/artist-search-result';\r\nimport { Artist } from '../models/artist';\r\n\r\nexport interface SearchProps {\r\n  artists: Artist[];\r\n  searchClickedOnce?: boolean;\r\n}\r\n\r\nfunction SearchResults(props: SearchProps) {\r\n  let searchHeader;\r\n  if (!!props.artists.length) {\r\n    searchHeader = <Typography variant=\"h4\">Results ({props.artists.length})</Typography>;\r\n  } else if (props.searchClickedOnce) {\r\n    searchHeader = <Typography variant=\"h6\">No Results</Typography>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {searchHeader}\r\n      {props.artists?.map((artist, index) => (\r\n        <ArtistSearchResult key={index} artist={artist} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchResults;\r\n","import axios from 'axios';\r\nimport { Artist } from '../models/artist';\r\nimport * as lastfm from '../lastfm.json';\r\nimport { SearchResponse } from '../models/search-results';\r\n\r\nconst IMAGE_INDEX_SM = 1;\r\nconst IMAGE_INDEX_XL = 4;\r\n\r\nexport function searchArtist(searchTerm: string, page: number): Promise<SearchResponse> {\r\n  return axios\r\n    .get(\r\n      `${lastfm.BASE_URL}/2.0/?method=artist.search&artist=${searchTerm}&page=${page}&api_key=${lastfm.API_KEY}&format=json`,\r\n    )\r\n    .then((response: any) => {\r\n      const data = response.data?.results;\r\n      const artists = data?.artistmatches.artist;\r\n      console.log(response.data?.results);\r\n\r\n      return {\r\n        artists: artists?.map((artist: any) => mapToArtist(artist)),\r\n        totalResults: parseInt(data['opensearch:totalResults']),\r\n        itemsPerPage: parseInt(data['opensearch:itemsPerPage']),\r\n        startIndex: parseInt(data['opensearch:startIndex']),\r\n      };\r\n    });\r\n}\r\n\r\nfunction mapToArtist(artist: any): Artist {\r\n  return {\r\n    ...artist,\r\n    image: getLastFmImage(artist, IMAGE_INDEX_SM),\r\n    imageLarge: getLastFmImage(artist, IMAGE_INDEX_XL),\r\n  };\r\n}\r\n\r\nfunction getLastFmImage(artist: any, size: number): string {\r\n  return artist.image?.[size]?.['#text'];\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FormGroup, TablePagination, TextField, Typography } from '@material-ui/core';\r\nimport { Artist } from '../models/artist';\r\nimport SearchResults from './search-results';\r\nimport { searchArtist } from './search-service';\r\nimport { SearchResponse } from '../models/search-results';\r\nimport { Pagination } from '../models/pagination';\r\nimport { useDebounce } from '../hooks/useDebounce';\r\n\r\nconst ITEMS_PER_PAGE = 30;\r\n\r\nfunction SearchLanding() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [pagination, setPagination] = useState<Pagination>({\r\n    total: 0,\r\n    currentPage: 0,\r\n    itemsPerPage: ITEMS_PER_PAGE,\r\n  });\r\n  const [results, setResults] = useState<Artist[]>([]);\r\n  const [searchClickedOnce, setSearchClickedOnce] = useState(false);\r\n\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 500);\r\n\r\n  const handleSearchTermChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleChangePage = (event: any, page: any): void => {\r\n    setPagination({ ...pagination, currentPage: page });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pagination.currentPage === 0) {\r\n      search(pagination.currentPage);\r\n    } else {\r\n      setPagination({ ...pagination, currentPage: 0 });\r\n    }\r\n  }, [debouncedSearchTerm]);\r\n\r\n  useEffect(() => {\r\n    search(pagination.currentPage);\r\n  }, [pagination.currentPage]);\r\n\r\n  const search = (page: number): void => {\r\n    if (debouncedSearchTerm?.length) {\r\n      searchArtist(debouncedSearchTerm, page + 1).then((result: SearchResponse) => {\r\n        setPagination({ ...pagination, total: result.totalResults });\r\n        setResults(result.artists);\r\n        setSearchClickedOnce(true);\r\n      });\r\n    } else {\r\n      setResults([]);\r\n      setPagination({ ...pagination, currentPage: 0 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h3\" component=\"h2\">\r\n        Last.fm Search\r\n      </Typography>\r\n\r\n      <FormGroup>\r\n        <TextField\r\n          id=\"search-term\"\r\n          label=\"Start typing to search for an artist\"\r\n          variant=\"outlined\"\r\n          onChange={handleSearchTermChange}\r\n        />\r\n      </FormGroup>\r\n\r\n      {!!results?.length && (\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={pagination.total}\r\n          page={pagination.currentPage}\r\n          onChangePage={handleChangePage}\r\n          rowsPerPage={ITEMS_PER_PAGE}\r\n          rowsPerPageOptions={[30]}\r\n        />\r\n      )}\r\n      <SearchResults artists={results} searchClickedOnce={searchClickedOnce} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchLanding;\r\n","import { useEffect, useState } from 'react';\r\n\r\n/*\r\n * I totally stole this code from the internet\r\n */\r\n\r\nexport function useDebounce(value: any, delay: number) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(\r\n    () => {\r\n      // Update debounced value after delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n      // Cancel the timeout if value changes (also on delay change or unmount)\r\n      // This is how we prevent debounced value from updating if value is changed ...\r\n      // .. within the delay period. Timeout gets cleared and restarted.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    [value, delay], // Only re-call effect if value or delay changes\r\n  );\r\n  return debouncedValue;\r\n}\r\n","import { Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Artist } from '../models/artist';\r\nimport { getTracks } from './artist-service';\r\nimport { Track } from '../models/track';\r\n\r\nexport interface ArtistTrackProps {\r\n  artist: Artist;\r\n}\r\n\r\nfunction ArtistTracks(props: ArtistTrackProps) {\r\n  const [artistTracks, setArtistTracks] = useState<Track[]>([]);\r\n\r\n  useEffect(() => {\r\n    getTracks(props.artist.mbid).then((tracks) => setArtistTracks(tracks));\r\n  }, [props.artist]);\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h5\">Top Tracks</Typography>\r\n      {artistTracks.length === 0 && <Typography>No top tracks for this artist.</Typography>}\r\n      {artistTracks.map((track, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <Typography className=\"track\">\r\n              {track.name} <span className=\"plays\">({`${track.playcount} plays`})</span>\r\n            </Typography>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtistTracks;\r\n","import axios from 'axios';\r\nimport * as lastfm from '../lastfm.json';\r\nimport { ArtistDetail } from '../models/artist-detail';\r\nimport { Track } from '../models/track';\r\n\r\nexport function getArtist(artistId: string): Promise<ArtistDetail> {\r\n  return axios\r\n    .get(`${lastfm.BASE_URL}/2.0/?method=artist.getinfo&mbid=${artistId}&api_key=${lastfm.API_KEY}&format=json`)\r\n    .then((response: any) => {\r\n      if (response.data.error) {\r\n        return { name: 'Error Ocurred', bio: {} };\r\n      }\r\n      const artist = response.data?.artist;\r\n      return {\r\n        ...artist,\r\n        ontour: artist.ontour === 0,\r\n      };\r\n    });\r\n}\r\n\r\nexport function getTracks(artistId: string): Promise<Track[]> {\r\n  return axios\r\n    .get(`${lastfm.BASE_URL}/2.0/?method=artist.gettoptracks&mbid=${artistId}&api_key=${lastfm.API_KEY}&format=json`)\r\n    .then((response: any) => {\r\n      if (response.data.error) {\r\n        return [];\r\n      }\r\n      const tracks = response.data?.toptracks.track;\r\n      return tracks.map((track: any) => {\r\n        return {\r\n          ...track,\r\n        };\r\n      });\r\n    });\r\n}\r\n","import { Accordion, AccordionDetails, AccordionSummary, Chip, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { Artist } from '../models/artist';\r\nimport { ArtistDetail } from '../models/artist-detail';\r\nimport { getArtist } from './artist-service';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport parse from 'html-react-parser';\r\nimport ArtistTracks from './artist-tracks';\r\n\r\nfunction ArtistInfo() {\r\n  const location = useLocation();\r\n  const artist = (location.state as any).artist as Artist;\r\n\r\n  const [artistDetails, setArtistDetails] = useState<ArtistDetail>();\r\n\r\n  useEffect(() => {\r\n    getArtist(artist.mbid).then((artist) => setArtistDetails(artist));\r\n  }, [artist]);\r\n\r\n  let tourBadge;\r\n  if (artistDetails?.ontour) {\r\n    tourBadge = <Chip className=\"tour-badge\" label=\"On Tour\" color=\"secondary\" />;\r\n  } else {\r\n    tourBadge = <Chip className=\"tour-badge\" label=\"Not On Tour\" color=\"primary\" />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h4\">\r\n            {artist.name}\r\n            {tourBadge}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Accordion>\r\n            <AccordionSummary id=\"bio-header\" expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Biography</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography>{parse(artistDetails?.bio.content ?? 'No biography for this artist.')}</Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <ArtistTracks artist={artist} />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ArtistInfo;\r\n","import React from 'react';\nimport { Route, Switch, useHistory } from 'react-router';\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport { Breadcrumbs, Container, Typography } from '@material-ui/core';\nimport './App.css';\nimport SearchLanding from './search/search-landing';\nimport ArtistInfo from './artist/artist-info';\n\nfunction App() {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const history = useHistory();\n\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/Artist\">\n              <Breadcrumbs aria-label=\"breadcrumb\">\n                <Link color=\"inherit\" href=\"/\" to=\"/\">\n                  Search Home\n                </Link>\n                <Typography color=\"textPrimary\">Artist Information</Typography>\n              </Breadcrumbs>\n              <ArtistInfo />\n            </Route>\n\n            <Route path=\"/\">\n              <SearchLanding />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}